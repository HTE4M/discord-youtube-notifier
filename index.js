require('dotenv').config(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤ environment variables ‡∏à‡∏≤‡∏Å .env
const { Client, GatewayIntentBits } = require('discord.js'); // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ discord.js
const axios = require('axios'); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• HTTP
const xml2js = require('xml2js'); // ‡πÅ‡∏õ‡∏•‡∏á XML ‡πÄ‡∏õ‡πá‡∏ô JSON
const sqlite = require('sqlite'); // ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô SQLite ‡πÅ‡∏ö‡∏ö promise
const sqlite3 = require('sqlite3'); // ‡πÑ‡∏î‡∏£‡πå‡πÄ‡∏ß‡∏≠‡∏£‡πå SQLite

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏≠‡∏ô‡∏ü‡∏¥‡∏Å‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
const config = {
  token: process.env.DISCORD_TOKEN, // Token ‡∏ö‡∏≠‡∏ó Discord ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô .env
  announceChannelId: 'YOUR_ANNOUNCE_CHANNEL_ID', // ID ‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
  youtubeChannelId: 'YOUR_YOUTUBE_CHANNEL_ID', // ‡∏ä‡πà‡∏≠‡∏á YouTube ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
  checkInterval: 300000, // ‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö (5 ‡∏ô‡∏≤‡∏ó‡∏µ)
  dbFile: 'videos.db' // ‡πÑ‡∏ü‡∏•‡πå SQLite ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö videoId
};

// ‡∏™‡∏£‡πâ‡∏≤‡∏á client Discord ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏∞‡∏ö‡∏∏ intents ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
const client = new Client({
  intents: [
    GatewayIntentBits.Guilds, // ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô guild (‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå)
    GatewayIntentBits.GuildMessages, // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô guild
    GatewayIntentBits.MessageContent // ‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (message content)
  ]
});

let db; // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• SQLite

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô timezone ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø
function getTimestamp() {
  return new Date().toLocaleString('th-TH', { timeZone: 'Asia/Bangkok' });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á Discord ‡πÅ‡∏•‡∏∞‡∏û‡∏¥‡∏°‡∏û‡πå log
async function sendAnnouncement(channel, message, log) {
  if (channel) {
    await channel.send(message);
    console.log(`[${getTimestamp()}] ${log}`);
  } else {
    console.log(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö announceChannel ID: ${config.announceChannelId}`);
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î YouTube feed ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏∞‡∏ö‡∏ö retry (3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á) ‡∏Å‡∏£‡∏ì‡∏µ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
async function fetchYouTubeFeedWithRetry(retries = 3, delay = 1000) {
  for (let attempt = 1; attempt <= retries; attempt++) {
    try {
      // ‡∏î‡∏∂‡∏á feed ‡πÅ‡∏ö‡∏ö XML
      const res = await axios.get(`https://www.youtube.com/feeds/videos.xml?channel_id=${config.youtubeChannelId}`);
      // ‡πÅ‡∏õ‡∏•‡∏á XML ‡πÄ‡∏õ‡πá‡∏ô JSON
      return xml2js.parseStringPromise(res.data);
    } catch (error) {
      console.warn(`‚ö†Ô∏è ‡πÇ‡∏´‡∏•‡∏î YouTube feed ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (attempt ${attempt}): ${error.message}`);
      if (attempt < retries) {
        // ‡∏£‡∏≠‡πÄ‡∏ß‡∏•‡∏≤ delay * attempt (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡πÜ) ‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
        await new Promise(res => setTimeout(res, delay * attempt));
      } else {
        // ‡∏ñ‡πâ‡∏≤ retry ‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡πÉ‡∏´‡πâ throw error ‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ
        throw error;
      }
    }
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
async function logTotalVideos() {
  const row = await db.get(`SELECT COUNT(*) AS count FROM videos`);
  console.log(`‚úÖ ‡πÄ‡∏Å‡πá‡∏ö videoId ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ${row.count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
}

// ‡πÇ‡∏´‡∏•‡∏î videoId ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å YouTube feed ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏ï‡∏≠‡∏ô‡∏ö‡∏≠‡∏ó‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
async function preloadYouTubeVideos() {
  console.log(`üì¶ [${getTimestamp()}] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î videoId ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å...`);
  try {
    const parsed = await fetchYouTubeFeedWithRetry();

    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏ô feed
    if (!parsed.feed.entry?.length) {
      console.log(`üì≠ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠`);
      return;
    }

    // ‡∏î‡∏∂‡∏á videoId ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å feed
    const videoIds = parsed.feed.entry.map(video => video['yt:videoId'][0]);

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å videoId ‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ã‡πâ‡∏≥
    for (const videoId of videoIds) {
      await db.run(`INSERT OR IGNORE INTO videos (videoId) VALUES (?)`, videoId);
    }

    await logTotalVideos();
  } catch (error) {
    console.error(`‚ùå preload videoId ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:`, error.message);
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô YouTube feed ‡∏ó‡∏∏‡∏Å‡πÜ 5 ‡∏ô‡∏≤‡∏ó‡∏µ
async function checkYouTube() {
  console.log(`üîç [${getTimestamp()}] ‡πÄ‡∏ä‡πá‡∏Ñ YouTube...`);
  try {
    const parsed = await fetchYouTubeFeedWithRetry();

    if (!parsed.feed.entry?.length) {
      console.log(`üì≠ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠`);
      return;
    }

    const announceChannel = client.channels.cache.get(config.announceChannelId);

    // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ï‡∏£‡∏ß‡∏à‡∏ó‡∏∏‡∏Å‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏ô feed
    for (const entry of parsed.feed.entry) {
      const videoId = entry['yt:videoId'][0];
      const videoTitle = entry.title[0];
      const titleLower = videoTitle.toLowerCase();

      // ‡πÄ‡∏ä‡πá‡∏Ñ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡πà‡∏≤‡∏°‡∏µ videoId ‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
      const row = await db.get(`SELECT videoId FROM videos WHERE videoId = ?`, videoId);
      if (row) {
        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πâ‡∏≥
        console.log(`‚è∏Ô∏è ${videoTitle} - ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß`);
        continue;
      }

      // ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ ‡πÅ‡∏¢‡∏Å‡πÄ‡∏õ‡πá‡∏ô ‡πÑ‡∏•‡∏ü‡πå, Shorts ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Ñ‡∏•‡∏¥‡∏õ‡∏õ‡∏Å‡∏ï‡∏¥
      if (titleLower.includes('#live')) {
        await sendAnnouncement(
          announceChannel,
          `üî¥ ‡πÑ‡∏•‡∏ü‡πå‡πÉ‡∏´‡∏°‡πà‡∏ö‡∏ô YouTube: **${videoTitle}**\nhttps://youtu.be/${videoId}`,
          `üî¥ ‡∏û‡∏ö‡πÑ‡∏•‡∏ü‡πå‡πÉ‡∏´‡∏°‡πà: ${videoTitle}`
        );
      } else if (titleLower.includes('#shorts')) {
        await sendAnnouncement(
          announceChannel,
          `üì± Shorts ‡πÉ‡∏´‡∏°‡πà‡∏ö‡∏ô YouTube: **${videoTitle}**\nhttps://www.youtube.com/shorts/${videoId}`,
          `üì± ‡∏û‡∏ö Shorts ‡πÉ‡∏´‡∏°‡πà: ${videoTitle}`
        );
      } else {
        await sendAnnouncement(
          announceChannel,
          `üé• ‡∏Ñ‡∏•‡∏¥‡∏õ‡πÉ‡∏´‡∏°‡πà‡∏ö‡∏ô YouTube: **${videoTitle}**\nhttps://youtu.be/${videoId}`,
          `üé• ‡∏û‡∏ö‡∏Ñ‡∏•‡∏¥‡∏õ‡πÉ‡∏´‡∏°‡πà: ${videoTitle}`
        );
      }

      // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å videoId ‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      await db.run(`INSERT INTO videos (videoId) VALUES (?)`, videoId);
    }

    await logTotalVideos();
  } catch (error) {
    console.error(`‚ùå ‡πÄ‡∏ä‡πá‡∏Ñ YouTube ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ:`, error.message);
  }
}

// ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à)
client.once('ready', async () => {
  console.log(`‚úÖ Logged in as ${client.user.tag}`);

  // ‡πÄ‡∏õ‡∏¥‡∏î‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• SQLite
  db = await sqlite.open({ filename: config.dbFile, driver: sqlite3.Database });

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á videos ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
  await db.run(`CREATE TABLE IF NOT EXISTS videos (videoId TEXT PRIMARY KEY)`);

  // ‡πÇ‡∏´‡∏•‡∏î videoId ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å YouTube feed ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
  await preloadYouTubeVideos();

  // ‡∏ï‡∏±‡πâ‡∏á interval ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö YouTube ‡∏ó‡∏∏‡∏Å‡πÜ 5 ‡∏ô‡∏≤‡∏ó‡∏µ
  setInterval(checkYouTube, config.checkInterval);
});

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏ö‡∏≠‡∏ó‡∏î‡πâ‡∏ß‡∏¢ token
client.login(config.token);
